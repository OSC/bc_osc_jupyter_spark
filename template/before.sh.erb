# Export the module function if it exists
[[ $(type -t module) == "function" ]] && export -f module

# Find available port to run server on
port=$(find_port ${host})

# Generate SHA1 encrypted password (requires OpenSSL installed)
SALT="$(create_passwd 16)"
password="$(create_passwd 16)"
PASSWORD_SHA1="$(echo -n "${password}${SALT}" | openssl dgst -sha1 | awk '{print $NF}')"

# Notebook root directory
export NOTEBOOK_ROOT="${NOTEBOOK_ROOT:-${HOME}}"

# older versions of Jupyter use XDG_RUNTIME_DIR, which Slurm sets, but we cannot use
# because we don't have permission to modify /user/run/$(id -u).
# newer versions (which the regular app uses and this should eventually
# upgrade to) use XDG_DATA_HOME, which Slurm does not set (yet). So force
# JUPYTER_RUNTIME_DIR (and JUPYTER_DATA_DIR) to what it would otherwise be.
export JUPYTER_DATA_DIR="$HOME/.local/share/jupyter"
export JUPYTER_RUNTIME_DIR="$JUPYTER_DATA_DIR/runtime"

# The `$CONFIG_FILE` environment variable is exported as it is used in the main
# `script.sh.erb` file when launching the Jupyter Notebook server.
export CONFIG_FILE="${PWD}/config.py"

# Generate Jupyter configuration file with secure file permissions
(
umask 077
cat > "${CONFIG_FILE}" << EOL
c.JupyterApp.config_file_name = 'ondemand_config'
c.KernelSpecManager.ensure_native_kernel = False
c.NotebookApp.ip = '*'
c.NotebookApp.port = ${port}
c.NotebookApp.port_retries = 0
c.NotebookApp.password = u'sha1:${SALT}:${PASSWORD_SHA1}'
c.NotebookApp.base_url = '/node/${host}/${port}/'
c.NotebookApp.open_browser = False
c.NotebookApp.allow_origin = '*'
c.NotebookApp.notebook_dir = '${NOTEBOOK_ROOT}'
c.NotebookApp.disable_check_xsrf = True
EOL
)

<%- if context.include_tutorials == "1" -%>
#
# Create workshop/tutorial notebooks
#

export tutorials_root="/jupyter/tutorials/jupyter_spark" # connection variable
export TUTORIALS_ROOT="${NOTEBOOK_ROOT}${tutorials_root}"
mkdir -p "${TUTORIALS_ROOT}"

# Copy over workshops/tutorials
set -x
ln -sfn "/users/PZS0645/support/workshop/Bigdata"/*.ipynb "${TUTORIALS_ROOT}"
symlinks -d "${TUTORIALS_ROOT}"
{ set +x; } 2>/dev/null
<%- end -%>
